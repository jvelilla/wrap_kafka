note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class RD_KAFKA_METADATA_PARTITION_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	id: INTEGER
			-- Access member `id`
		require
			exists: exists
		do
			Result := c_id (item)
		ensure
			result_correct: Result = c_id (item)
		end

	set_id (a_value: INTEGER) 
			-- Change the value of member `id` to `a_value`.
		require
			exists: exists
		do
			set_c_id (item, a_value)
		ensure
			id_set: a_value = id
		end

	err: INTEGER
			-- Access member `err`
		require
			exists: exists
		do
			Result := c_err (item)
		ensure
			result_correct: Result = c_err (item)
		end

	set_err (a_value: INTEGER) 
			-- Change the value of member `err` to `a_value`.
		require
			exists: exists
		do
			set_c_err (item, a_value)
		ensure
			err_set: a_value = err
		end

	leader: INTEGER
			-- Access member `leader`
		require
			exists: exists
		do
			Result := c_leader (item)
		ensure
			result_correct: Result = c_leader (item)
		end

	set_leader (a_value: INTEGER) 
			-- Change the value of member `leader` to `a_value`.
		require
			exists: exists
		do
			set_c_leader (item, a_value)
		ensure
			leader_set: a_value = leader
		end

	replica_cnt: INTEGER
			-- Access member `replica_cnt`
		require
			exists: exists
		do
			Result := c_replica_cnt (item)
		ensure
			result_correct: Result = c_replica_cnt (item)
		end

	set_replica_cnt (a_value: INTEGER) 
			-- Change the value of member `replica_cnt` to `a_value`.
		require
			exists: exists
		do
			set_c_replica_cnt (item, a_value)
		ensure
			replica_cnt_set: a_value = replica_cnt
		end

	replicas: POINTER
			-- Access member `replicas`
		require
			exists: exists
		do
			Result := c_replicas (item)
		ensure
			result_correct: Result = c_replicas (item)
		end

	set_replicas (a_value: POINTER) 
			-- Change the value of member `replicas` to `a_value`.
		require
			exists: exists
		do
			set_c_replicas (item, a_value)
		ensure
			replicas_set: a_value = replicas
		end

	isr_cnt: INTEGER
			-- Access member `isr_cnt`
		require
			exists: exists
		do
			Result := c_isr_cnt (item)
		ensure
			result_correct: Result = c_isr_cnt (item)
		end

	set_isr_cnt (a_value: INTEGER) 
			-- Change the value of member `isr_cnt` to `a_value`.
		require
			exists: exists
		do
			set_c_isr_cnt (item, a_value)
		ensure
			isr_cnt_set: a_value = isr_cnt
		end

	isrs: POINTER
			-- Access member `isrs`
		require
			exists: exists
		do
			Result := c_isrs (item)
		ensure
			result_correct: Result = c_isrs (item)
		end

	set_isrs (a_value: POINTER) 
			-- Change the value of member `isrs` to `a_value`.
		require
			exists: exists
		do
			set_c_isrs (item, a_value)
		ensure
			isrs_set: a_value = isrs
		end

feature {NONE} -- Implementation wrapper for struct struct rd_kafka_metadata_partition

	sizeof_external: INTEGER 
		external
			"C inline use <rdkafka.h>"
		alias
			"sizeof(struct rd_kafka_metadata_partition)"
		end

	c_id (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->id
			]"
		end

	set_c_id (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->id =  (int32_t)$a_value
			]"
		ensure
			id_set: a_value = c_id (an_item)
		end

	c_err (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->err
			]"
		end

	set_c_err (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->err =  (rd_kafka_resp_err_t)$a_value
			]"
		ensure
			err_set: a_value = c_err (an_item)
		end

	c_leader (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->leader
			]"
		end

	set_c_leader (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->leader =  (int32_t)$a_value
			]"
		ensure
			leader_set: a_value = c_leader (an_item)
		end

	c_replica_cnt (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->replica_cnt
			]"
		end

	set_c_replica_cnt (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->replica_cnt =  (int)$a_value
			]"
		ensure
			replica_cnt_set: a_value = c_replica_cnt (an_item)
		end

	c_replicas (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->replicas
			]"
		end

	set_c_replicas (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->replicas =  (int32_t*)$a_value
			]"
		ensure
			replicas_set: a_value = c_replicas (an_item)
		end

	c_isr_cnt (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->isr_cnt
			]"
		end

	set_c_isr_cnt (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->isr_cnt =  (int)$a_value
			]"
		ensure
			isr_cnt_set: a_value = c_isr_cnt (an_item)
		end

	c_isrs (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->isrs
			]"
		end

	set_c_isrs (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_metadata_partition*)$an_item)->isrs =  (int32_t*)$a_value
			]"
		ensure
			isrs_set: a_value = c_isrs (an_item)
		end

end
