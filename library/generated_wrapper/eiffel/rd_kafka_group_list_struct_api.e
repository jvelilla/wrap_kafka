note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class RD_KAFKA_GROUP_LIST_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	groups: detachable RD_KAFKA_GROUP_INFO_STRUCT_API 
			-- Access member `groups`
		require
			exists: exists
		do
			if attached c_groups (item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_groups (item) = default_pointer 
			result_not_void: attached Result as l_result implies l_result.item = c_groups (item) 
		end

	set_groups (a_value: RD_KAFKA_GROUP_INFO_STRUCT_API) 
			-- Set member `groups`
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_c_groups (item, a_value.item)
		ensure
			groups_set: attached groups as l_value implies l_value.item = a_value.item
		end

	group_cnt: INTEGER
			-- Access member `group_cnt`
		require
			exists: exists
		do
			Result := c_group_cnt (item)
		ensure
			result_correct: Result = c_group_cnt (item)
		end

	set_group_cnt (a_value: INTEGER) 
			-- Change the value of member `group_cnt` to `a_value`.
		require
			exists: exists
		do
			set_c_group_cnt (item, a_value)
		ensure
			group_cnt_set: a_value = group_cnt
		end

feature {NONE} -- Implementation wrapper for struct struct rd_kafka_group_list

	sizeof_external: INTEGER 
		external
			"C inline use <rdkafka.h>"
		alias
			"sizeof(struct rd_kafka_group_list)"
		end

	c_groups (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_group_list*)$an_item)->groups
			]"
		end

	set_c_groups (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_group_list*)$an_item)->groups =  (struct rd_kafka_group_info*)$a_value
			]"
		ensure
			groups_set: a_value = c_groups (an_item)
		end

	c_group_cnt (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_group_list*)$an_item)->group_cnt
			]"
		end

	set_c_group_cnt (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <rdkafka.h>"
		alias
			"[
				((struct rd_kafka_group_list*)$an_item)->group_cnt =  (int)$a_value
			]"
		ensure
			group_cnt_set: a_value = c_group_cnt (an_item)
		end

end
